// <auto-generated />
using System;
using IlanSistemi.DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IlanSistemi.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
<<<<<<<< HEAD:IlanSistemi/IlanSistemi.DataAccess/Migrations/20230623120441_23_06_2023_sec.Designer.cs
    [Migration("20230623120441_23_06_2023_sec")]
    partial class _23_06_2023_sec
========
    [Migration("20230623161705_111_mig")]
    partial class _111_mig
>>>>>>>> 02271caab0f6c103eb5bdc32cb44f06fc72092c9:IlanSistemi/IlanSistemi.DataAccess/Migrations/20230623161705_111_mig.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.AdminRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Advert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("adverts");
<<<<<<<< HEAD:IlanSistemi/IlanSistemi.DataAccess/Migrations/20230623120441_23_06_2023_sec.Designer.cs

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 6, 23, 15, 4, 40, 969, DateTimeKind.Local).AddTicks(6708),
                            Description = "Sahibinden garantisiz laptop",
                            Title = "Laptop Bal Almayan Mal",
                            UsersId = 4
                        },
                        new
                        {
                            Id = 2,
                            Description = "Yürüyeni iyi uçak",
                            Title = "Yürüyen Uçak",
                            UsersId = 4
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 6, 23, 15, 4, 40, 969, DateTimeKind.Local).AddTicks(6714),
                            Description = "Krediye uygun gemicik",
                            Title = "Gemicik",
                            UsersId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 6, 23, 15, 4, 40, 969, DateTimeKind.Local).AddTicks(6715),
                            Description = "Zengin pijaması",
                            Title = "Röpteşambır",
                            UsersId = 4
                        });
========
>>>>>>>> 02271caab0f6c103eb5bdc32cb44f06fc72092c9:IlanSistemi/IlanSistemi.DataAccess/Migrations/20230623161705_111_mig.Designer.cs
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.AdvertComment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AdvertId1")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId1");

                    b.HasIndex("UsersId");

                    b.ToTable("advertComments");
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.AdvertImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AdvertId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.ToTable("AdvertImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdvertId = 1,
                            ImagePath = "laptop.jpeg"
                        },
                        new
                        {
                            Id = 2,
                            AdvertId = 2,
                            ImagePath = "yuruyenucak.png"
                        },
                        new
                        {
                            Id = 3,
                            AdvertId = 3,
                            ImagePath = "gemicik.jpg"
                        },
                        new
                        {
                            Id = 4,
                            AdvertId = 4,
                            ImagePath = "roptesambir.jpg"
                        });
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Elektronik",
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Envai çeşit sizi çıplaklıktan koruyacak kıyafetler.",
                            Name = "Moda"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Ev Tekstili, Mutfak Gereçleri",
                            Name = "Ev-Yasam"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Aradığınız tüm spor ürünleri",
                            Name = "Spor-Outdoor"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Kişisel bakım ve makyaj malzemeleri",
                            Name = "Kozmetik"
                        });
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.CategoryAdvert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AdvertId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryAdverts");
<<<<<<<< HEAD:IlanSistemi/IlanSistemi.DataAccess/Migrations/20230623120441_23_06_2023_sec.Designer.cs

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdvertId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdvertId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            AdvertId = 4,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 4,
                            AdvertId = 3,
                            CategoryId = 2
                        });
========
>>>>>>>> 02271caab0f6c103eb5bdc32cb44f06fc72092c9:IlanSistemi/IlanSistemi.DataAccess/Migrations/20230623161705_111_mig.Designer.cs
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("pages");
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("settings");
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
<<<<<<<< HEAD:IlanSistemi/IlanSistemi.DataAccess/Migrations/20230623120441_23_06_2023_sec.Designer.cs

                    b.HasData(
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "Türkiye",
                            ConcurrencyStamp = "342433b6-b18a-4e6c-9721-d858c5afff0a",
                            CreatedAt = new DateTime(2023, 6, 23, 15, 4, 40, 969, DateTimeKind.Local).AddTicks(6515),
                            Email = "sample@user.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Sample",
                            Phone = "0543212340",
                            PhoneNumberConfirmed = false,
                            Surname = "123456",
                            TwoFactorEnabled = false
                        });
========
>>>>>>>> 02271caab0f6c103eb5bdc32cb44f06fc72092c9:IlanSistemi/IlanSistemi.DataAccess/Migrations/20230623161705_111_mig.Designer.cs
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Advert", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.Users", "User")
                        .WithMany("adverts")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.AdvertComment", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.Advert", null)
                        .WithMany("advertComments")
                        .HasForeignKey("AdvertId1");

                    b.HasOne("IlanSistemi.Entities.Concrete.Advert", "Advert")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IlanSistemi.Entities.Concrete.Users", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IlanSistemi.Entities.Concrete.Users", null)
                        .WithMany("advertComments")
                        .HasForeignKey("UsersId");

                    b.Navigation("Advert");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.AdvertImage", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.Advert", "adverts")
                        .WithMany("advertImages")
                        .HasForeignKey("AdvertId");

                    b.Navigation("adverts");
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.CategoryAdvert", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.Advert", "adverts")
                        .WithMany("categoryAdverts")
                        .HasForeignKey("AdvertId");

                    b.HasOne("IlanSistemi.Entities.Concrete.Category", "Category")
                        .WithMany("CategoryAdverts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("adverts");
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Setting", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.Users", "User")
                        .WithMany("settings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.AdminRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.AdminRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IlanSistemi.Entities.Concrete.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("IlanSistemi.Entities.Concrete.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Advert", b =>
                {
                    b.Navigation("advertComments");

                    b.Navigation("advertImages");

                    b.Navigation("categoryAdverts");
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Category", b =>
                {
                    b.Navigation("CategoryAdverts");
                });

            modelBuilder.Entity("IlanSistemi.Entities.Concrete.Users", b =>
                {
                    b.Navigation("advertComments");

                    b.Navigation("adverts");

                    b.Navigation("settings");
                });
#pragma warning restore 612, 618
        }
    }
}
